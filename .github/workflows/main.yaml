name: Build and Deploy React App

on:
  push:
    branches:
      - main

jobs:
  job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Clean npm cache
        run: npm cache clean --force
        working-directory: ./application

      - name: Install dependencies
        working-directory: ./application
        run: npm ci

      - name: Run Jest tests
        working-directory: ./application
        run: npm test

      - name: Build React app
        working-directory: ./application
        env:
          NODE_ENV: production
          NEXT_PUBLIC_AUTH_TOKEN_KEY: ${{ secrets.NEXT_PUBLIC_AUTH_TOKEN_KEY }}
          NEXT_PUBLIC_AUTH_REFRESH_TOKEN_KEY: ${{ secrets.NEXT_PUBLIC_AUTH_REFRESH_TOKEN_KEY }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        run: npm run build

      - name: Create production archive
        working-directory: ./application
        run: |
          tar -czf ../app.tar.gz .next public node_modules package.json next.config.ts \


      - name: Upload archive
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "app.tar.gz"
          target: "~/apps/clientjo"

      - name: Deploy and restart app
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ~/apps/clientjo
            mkdir -p app
            rm -rf app/*
            tar -xzf app.tar.gz -C app
            rm app.tar.gz
            cd app
            npm install --omit=dev

            pm2 delete clientjo || true
            pm2 start npm --name clientjo -- start
            pm2 save

            sudo systemctl restart nginx
            sudo systemctl is-active nginx
            echo "Nginx restarted successfully"

      - name: Notify deployment success
        run: echo "Deployment to server successful!"
